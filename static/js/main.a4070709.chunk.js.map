{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","timerId","this","setInterval","setState","console","log","toLocaleTimeString","prevProps","oldName","clockName","newName","props","clearInterval","className","React","Component","App","isClockVisible","name","type","onClick","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"2OAOaA,EAAb,4MACEC,MAAQ,CACNC,YAAa,IAAIC,MAFrB,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CAAEL,YAAa,IAAIC,OAEjCK,QAAQC,IAAI,EAAKR,MAAMC,YAAYQ,wBAClC,OAZP,gCAeE,SAAmBC,GACjB,IAAMC,EAAUD,EAAUE,UACpBC,EAAUT,KAAKU,MAAMF,UAIvBD,IAAYE,GAEdN,QAAQC,IAAR,qCAA0CG,EAA1C,eAAwDE,MAvB9D,kCA2BE,WACEE,cAAcX,KAAKD,WA5BvB,oBA+BE,WACE,OACE,mCACE,sBAAKa,UAAU,QAAf,UACE,6BAAKZ,KAAKU,MAAMF,YAChB,8BACG,iBACD,iCAASR,KAAKJ,MAAMC,YAAYQ,mCAtC5C,GAA2BQ,IAAMC,WCHpBC,G,MAAb,4MACEnB,MAAQ,CACNoB,gBAAgB,EAChBC,KAAM,aAHV,4CAME,WAAU,IAAD,OACP,OACE,qCACGjB,KAAKJ,MAAMoB,gBAAkB,cAAC,EAAD,CAAOR,UAAWR,KAAKJ,MAAMqB,OAC3D,sBAAKL,UAAU,MAAf,UACE,wBACEM,KAAK,SACLC,QAAS,WACP,EAAKjB,SAAS,CAAEc,gBAAgB,KAHpC,wBAQA,wBACEE,KAAK,SACLC,QAAS,WACP,EAAKjB,SAAS,CAAEc,gBAAgB,KAHpC,wBAQA,wBACEE,KAAK,SACLC,QAAS,WACP,EAAKjB,SAAS,CAAEe,KAAMG,KAAKC,MAAsB,IAAhBD,KAAKE,aAH1C,uCA3BV,GAAyBT,IAAMC,YCD/BS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a4070709.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ntype Props = {\n  clockName: string | number;\n};\n\nexport class Clock extends React.Component<Props> {\n  state = {\n    currentTime: new Date(),\n  };\n\n  timerId!: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ currentTime: new Date() });\n      // eslint-disable-next-line\n      console.log(this.state.currentTime.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const oldName = prevProps.clockName;\n    const newName = this.props.clockName;\n    // eslint-disable-next-line\n    // console.clear();\n\n    if (oldName !== newName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${oldName} to ${newName}`)\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"Clock\">\n          <h1>{this.props.clockName}</h1>\n          <p>\n            {'Current time: '}\n            <strong>{this.state.currentTime.toLocaleTimeString()}</strong>\n          </p>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock/Clock';\nimport './App.scss';\n\nexport class App extends React.Component {\n  state = {\n    isClockVisible: true,\n    name: 'New Clock',\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.isClockVisible && <Clock clockName={this.state.name} />}\n        <div className=\"App\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({ isClockVisible: true });\n            }}\n          >\n            Show Clock\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({ isClockVisible: false });\n            }}\n          >\n            Hide Clock\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({ name: Math.floor(Math.random() * 777) });\n            }}\n          >\n            Set Random Name\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}